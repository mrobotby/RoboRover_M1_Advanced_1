#include <ServoRoboRoverM1_05.h>
#include <HCSR04RoboRoverM1_05.h>

ServoMotor myServo;
Ultrasonic myUltrasonic;

void setup() {
  Serial.begin(9600);
  myServo.attach();
  myUltrasonic.attach();
}

void loop() {
  // Программа по управлению сервоприводом и поворотом его из крайнего левого в крайнее правое положение, а также измерение расстояния с УЗ-датчика в трех положениях: центральном, крайнем левом и крайнем правом.

  // Введение:
  // Перед подачей питания через Тумблеры питания установи сервопривод в центральное положение!

  // 1. Подключи робота к компьютеру и загрузи программу в робота через Arduino IDE.
  // 2. Включи Тумблеры питания.
  // 3. Открой Монитор последовательного порта в Arduino IDE и смотри показания с датчика, когда сервопривод будет поворачиваться.

  // Описание программы:
  // Настройка -Сначала в программе настраивается Последовательной порт Serial на скорости 9600 бод/с. Настраивается сервопривод робота.

  // Цикл -В начале сервопривод находится в центральном положении (значение угла 90), производится измерение расстояния с УЗ-датчика в данном положении, после чего значение расстояния выводится в Монитор последовательного порта Arduino IDE. После чего происходит задержка в 1 секунду и сервопривод поворачивается в левое положение (значение угла 130). Опять происходит измерение расстояния с УЗ-датчика и значение выводится в Монитор последовательного порта. После чего происходит задержка в 1 секунду и сервопривод поворачивается в правое положение (значение угла 50). Опять происходит измерение расстояния с УЗ-датчика и значение выводится в Монитор последовательного порта. Потом происходит задержка в 1 секунду и цикл повторяется вновь.
  "Справка о программе. Кликни на знак ?";

  myServo.write(90);
  Serial.print("Расстояние по центру ");
  Serial.println(myUltrasonic.read());
  delay(3000);
  myServo.write(130);
  Serial.print("Расстояние слева ");
  Serial.println(myUltrasonic.read());
  delay(1000);
  myServo.write(50);
  Serial.print("Расстояние справа ");
  Serial.println(myUltrasonic.read());
  delay(1000);

}
